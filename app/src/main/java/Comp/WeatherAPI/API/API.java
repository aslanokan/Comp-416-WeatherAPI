/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Comp.WeatherAPI.API;

import okhttp3.Response;

public class API {
    static WeatherAPI weatherAPI = new WeatherAPI();
    static FileUtils fileUtils = new FileUtils();
    static DateUtils dateUtils = new DateUtils();

//    public static void main(String[] args) {
//        String city = "London";
//        String lat = "0";
//        String lon = "0";
//        String layer = "clouds_new";
//        String z = "0";
//        String x = "0";
//        String y = "0";
//
//        String date = dateUtils.getDaysAgoInSecond(4);
//        String time = date;
//
//        getBasicWeatherMap(layer, z, x, y);
//        getMinuteForecast(lat, lon);
//        getDailyForecast(lat, lon);
//        getHistoricalWeather(lat, lon, time);
//        getCurrentWeatherAt(city);
//    }

    public static String getCurrentWeatherAt(String city) {
        String filename = String.format("currentWeather-%s-%s", city, dateUtils.getDate());
        String currentWeather = weatherAPI.getCurrentWeatherAt(city);
        fileUtils.saveJSON(currentWeather, filename);
        return filename;
    }

    public static String getDailyForecast(String lat, String lon) {
        String filename = String.format("dailyForecast-%s-%s-%s", lat, lon, dateUtils.getDate());
        String dailyForecast = weatherAPI.getDailyForecast(lat, lon);
        fileUtils.saveJSON(dailyForecast, filename);
        return filename;
    }

    public static String getBasicWeatherMap(String layer, String z, String x, String y) {
        String filename = String.format("basicWeatherMapData-%s-%s-%s-%s-%s", layer, z, x, y, dateUtils.getDate());
        Response basicWeatherMapData = weatherAPI.getBasicWeatherMap(layer, z, x, y);
        fileUtils.saveData(basicWeatherMapData, filename);
        return filename;
    }

    public static String getMinuteForecast(String lat, String lon) {
        String filename = String.format("minuteForecast-%s-%s-%s", lat, lon, dateUtils.getDate());
        String minuteForecast = weatherAPI.getMinuteForecast(lat, lon);
        fileUtils.saveJSON(minuteForecast, filename);
        return filename;
    }

    public static String getHistoricalWeather(String lat, String lon, String time) {
        String filename = String.format("historicalWeather-%s-%s-%s-%s", lat, lon, time, dateUtils.getDate());
        String historicalWeather = weatherAPI.getHistoricalWeather(lat, lon, time);
        fileUtils.saveJSON(historicalWeather, filename);
        return filename;
    }
}
